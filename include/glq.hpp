/**********************************************************************************************************************************
                                            Monomial's Library by Tiago Fernandes Moherdaui

            The library is meant to make operations with monomials easier by use of indicial notation.

            This file provides Gauss-Legendre quadrature pairs (position, weight) for order up to 61.

                    Pairs for position in [-1,1] and weights in [0,2]           mnl::GaussLegendre(k);
                    Pairs for position in [0,1] and weights in [0,1]            mnl::GaussLegendreR(k);

            This also provides Gauss-Lobatto quadrature pairs (position, weight) for order up to 63.

                    Pairs for position in [-1,1] and weights in [0,2]           mnl::GaussLobatto(k);
                    Pairs for position in [0,1] and weights in [0,1]            mnl::GaussLobattoR(k);

            This is produced in C++11 and includes only <array> and <vector>.

**********************************************************************************************************************************/

#ifndef GLQ
#define GLQ
#include "mnl.hpp"
#include <vector>
#include <cmath>

namespace mnl {
    // Compressed look-up table
    constexpr std::array<double, 480> _clut{
    0.57735026918963,	1.,
    0.77459666924148,	0.555555555555556,
    0.33998104358486,	0.652145154862546,
    0.86113631159405,	0.347854845137454,
    0.5384693101057,		0.478628670499366,
    0.9061798459387,		0.236926885056189,
    0.2386191860832,		0.467913934572691,
    0.6612093864663,		0.360761573048139,
    0.9324695142032,		0.17132449237917,
    0.4058451513774,		0.381830050505119,
    0.7415311855994,		0.279705391489277,
    0.9491079123428,		0.12948496616887,
    0.1834346424956,		0.362683783378362,
    0.5255324099163,		0.313706645877887,
    0.7966664774136,		0.222381034453374,
    0.9602898564975,		0.101228536290376,
    0.3242534234038,		0.312347077040003,
    0.6133714327006,		0.260610696402935,
    0.8360311073266,		0.180648160694857,
    0.9681602395076,		0.0812743883615744,
    0.1488743389816,		0.295524224714753,
    0.4333953941292,		0.269266719309996,
    0.679409568299,		0.219086362515982,
    0.865063366689,		0.149451349150581,
    0.9739065285172,		0.0666713443086881,
    0.2695431559523,		0.262804544510247,
    0.5190961292068,		0.23319376459199,
    0.730152005574,		0.186290210927734,
    0.8870625997681,		0.125580369464905,
    0.9782286581461,		0.0556685671161737,
    0.1252334085115,		0.249147045813403,
    0.3678314989982,		0.233492536538355,
    0.5873179542866,		0.203167426723066,
    0.7699026741943,		0.160078328543346,
    0.9041172563705,		0.106939325995318,
    0.9815606342467,		0.0471753363865118,
    0.2304583159551,		0.226283180262897,
    0.4484927510364,		0.207816047536889,
    0.6423493394403,		0.178145980761946,
    0.8015780907333,		0.138873510219787,
    0.917598399223,		0.0921214998377284,
    0.9841830547186,		0.0404840047653159,
    0.1080549487073,		0.215263853463158,
    0.3191123689279,		0.205198463721296,
    0.5152486363582,		0.185538397477938,
    0.6872929048117,		0.157203167158194,
    0.8272013150698,		0.121518570687903,
    0.9284348836636,		0.08015808715976,
    0.986283808697,		0.0351194603317519,
    0.2011940939974,		0.198431485327112,
    0.3941513470776,		0.186161000015562,
    0.5709721726085,		0.166269205816994,
    0.72441773136,		0.139570677926154,
    0.84820658341,		0.1071592204671719,
    0.937273392401,		0.0703660474881081,
    0.98799251802,		0.0307532419961173,
    0.0950125098376,		0.189450610455068,
    0.2816035507793,		0.182603415044924,
    0.458016777657,		0.169156519395003,
    0.617876244403,		0.149595988816577,
    0.755404408355,		0.124628971255534,
    0.865631202388,		0.095158511682493,
    0.944575023073,		0.0622535239386479,
    0.989400934992,		0.0271524594117541,
    0.1784841814958,		0.176562705366993,
    0.351231763454,		0.16800410215645,
    0.512690537086,		0.15404576107681,
    0.657671159217,		0.135136368468525,
    0.781514003897,		0.111883847193404,
    0.880239153727,		0.0850361483171792,
    0.950675521769,		0.0554595293739872,
    0.990575475314,		0.0241483028685479,
    0.084775013042,		0.169142382963144,
    0.251886225692,		0.164276483745833,
    0.411751161463,		0.154684675126265,
    0.559770831074,		0.140642914670651,
    0.69168704306,		0.122555206711478,
    0.803704958973,		0.100942044106287,
    0.892602466498,		0.076425730254889,
    0.955823949571,		0.0497145488949698,
    0.991565168421,		0.0216160135264833,
    0.16035864564,		0.158968843393954,
    0.316564099964,		0.15276604206586,
    0.464570741376,		0.142606702173607,
    0.600545304662,		0.128753962539336,
    0.720966177335,		0.111566645547334,
    0.822714656537,		0.09149002162245,
    0.903155903615,		0.0690445427376412,
    0.960208152135,		0.0448142267656996,
    0.992406843844,		0.0194617882297265,
    0.076526521133,		0.152753387130726,
    0.227785851142,		0.149172986472604,
    0.373706088715,		0.142096109318382,
    0.510867001951,		0.131688638449177,
    0.636053680727,		0.118194531961518,
    0.74633190646,		0.10193011981724,
    0.839116971822,		0.083276741576705,
    0.912234428251,		0.0626720483341091,
    0.963971927278,		0.0406014298003869,
    0.993128599185,		0.0176140071391521,
    0.145561854161,		0.14452440398997,
    0.288021316802,		0.139887394791073,
    0.424342120207,		0.132268938633337,
    0.551618835887,		0.121831416053729,
    0.667138804197,		0.1087972991671484,
    0.768439963476,		0.0934444234560339,
    0.853363364583,		0.0761001136283793,
    0.92009933415,		0.0571344254268572,
    0.967226838566,		0.0369537897708525,
    0.99375217062,		0.0160172282577743,
    0.06973927332,		0.139251872855632,
    0.207860426688,		0.136541498346015,
    0.341935820892,		0.131173504787062,
    0.469355837987,		0.123252376810512,
    0.587640403507,		0.112932296080539,
    0.694487263187,		0.100414144442881,
    0.787816805979,		0.085941606217068,
    0.86581257772,		0.06979646842452,
    0.926956772187,		0.0522933351526833,
    0.970060497835,		0.0337749015848142,
    0.994294585482,		0.0146279952982722,
    0.133256824298,		0.132462039404697,
    0.26413568097,		0.128905722188082,
    0.39030103803,		0.12304908430673,
    0.509501477846,		0.114996640222411,
    0.619609875764,		0.1048920914645414,
    0.718661363132,		0.0929157660600351,
    0.804888401619,		0.079281411776719,
    0.87675235827,		0.0642324214085259,
    0.932971086826,		0.0480376717310847,
    0.972542471218,		0.0309880058569794,
    0.994769334998,		0.0134118594871418,
    0.064056892863,		0.127938195346752,
    0.191118867474,		0.125837456346828,
    0.315042679696,		0.121670472927803,
    0.433793507626,		0.115505668053726,
    0.545421471389,		0.107444270115966,
    0.648093651937,		0.097618652104114,
    0.740124191579,		0.086190161531953,
    0.820001985974,		0.07334648141108,
    0.886415527004,		0.0592985849154368,
    0.938274552003,		0.0442774388174198,
    0.974728555971,		0.0285313886289337,
    0.995187219997,		0.0123412297999872,
    0.122864692611,		0.12224244299031,
    0.243866883721,		0.119455763535785,
    0.361172305809,		0.114858259145712,
    0.473002731446,		0.1085196244742637,
    0.577662930241,		0.1005359490670506,
    0.673566368473,		0.0910282619829636,
    0.759259263037,		0.080140700335001,
    0.833442628761,		0.0680383338123569,
    0.894991997878,		0.0549046959758352,
    0.942974571229,		0.0409391567013063,
    0.97666392146,		0.0263549866150321,
    0.99555696979,		0.01139379850102629,
    0.059230093429,		0.118321415279262,
    0.176858820357,		0.116660443485297,
    0.292004839486,		0.11336181654632,
    0.403051755123,		0.108471840528577,
    0.508440714825,		0.102059161094425,
    0.606692293018,		0.094213800355914,
    0.69642726042,		0.085045894313485,
    0.776385948821,		0.07468414976566,
    0.845445942788,		0.0632740463295748,
    0.902637861984,		0.0509758252971478,
    0.947159066662,		0.0379623832943628,
    0.978385445956,		0.0244178510926319,
    0.995885701146,		0.010551372617343,
    0.11397258561,		0.1134763461089651,
    0.22645936544,		0.1112524883568452,
    0.335993903639,		0.1075782857885332,
    0.44114825175,		0.1025016378177458,
    0.540551564579,		0.0960887273700285,
    0.632907971946,		0.088423158543757,
    0.717013473739,		0.0796048677730578,
    0.791771639071,		0.0697488237662456,
    0.856207908018,		0.0589835368598336,
    0.909482320677,		0.0474494125206151,
    0.950900557815,		0.0352970537574197,
    0.979923475962,		0.0226862315961806,
    0.996179262889,		0.00979899605129436,
    0.055079289884,		0.110047013016475,
    0.164569282133,		0.108711192258294,
    0.272061627635,		0.106055765922846,
    0.376251516089,		0.102112967578061,
    0.475874224955,		0.09693065799793,
    0.569720471811,		0.090571744393033,
    0.656651094039,		0.083113417228901,
    0.735610878014,		0.074646214234569,
    0.805641370917,		0.065272923967,
    0.865892522574,		0.0551073456757167,
    0.915633026392,		0.0442729347590042,
    0.954259280629,		0.0329014277823044,
    0.981303165371,		0.0211321125927713,
    0.996442497574,		0.0091242825930945,
    0.106278230133,		0.1058761550973209,
    0.211352286166,		0.1040733100777294,
    0.314031637868,		0.101091273759915,
    0.413152888174,		0.0969638340944086,
    0.507592955124,		0.0917377571392588,
    0.596281797138,		0.0854722573661725,
    0.678214537603,		0.0782383271357638,
    0.752462851734,		0.0701179332550513,
    0.818185487615,		0.0612030906570791,
    0.87463780492,		0.0515948269024979,
    0.921180232953,		0.0414020625186828,
    0.957285595778,		0.0307404922020936,
    0.982545505261,		0.0197320850561227,
    0.996679442261,		0.00851690387874641,
    0.051471842555,		0.102852652893559,
    0.153869913609,		0.101762389748406,
    0.254636926168,		0.099593420586795,
    0.352704725531,		0.096368737174644,
    0.447033769538,		0.092122522237786,
    0.536624148142,		0.086899787201083,
    0.620526182989,		0.08075589522942,
    0.697850494793,		0.073755974737705,
    0.767777432105,		0.06597422988218,
    0.829565762383,		0.0574931562176191,
    0.882560535792,		0.0484026728305941,
    0.926200047429,		0.038799192569627,
    0.960021864968,		0.0287847078833234,
    0.98366812328,		0.018466468311091,
    0.996893484075,		0.0079681924961666,
    0.099555312152,		0.0992250112266723,
    0.198121199336,		0.0977433353863287,
    0.294718069982,		0.0952902429123195,
    0.388385901608,		0.0918901138936415,
    0.478193782045,		0.0875767406084779,
    0.563249161407,		0.0823929917615893,
    0.642706722924,		0.0763903865987766,
    0.715776784587,		0.0696285832354104,
    0.781733148417,		0.0621747865610284,
    0.839920320146,		0.0541030824249169,
    0.889760029948,		0.0454937075272011,
    0.930756997897,		0.0364322739123855,
    0.962503925093,		0.0270090191849794,
    0.984685909665,		0.0173186207903106,
    0.997087481819,		0.00747083157924878
    };

    constexpr std::array<double, 480> _lobattoclut {
        0.4472135954999579, 	0.833333333333333,
        0.6546536707079771, 	0.54444444444444,
        0.2852315164806451, 	0.554858377035486,
        0.7650553239294647, 	0.37847495629785,
        0.4688487934707142, 	0.43174538120986,
        0.8302238962785669, 	0.27682604736157,
        0.2092992179024789, 	0.412458794658704,
        0.5917001814331423, 	0.3411226924835,
        0.8717401485096066, 	0.2107042271435,
        0.3631174638261782, 	0.34642851097305,
        0.6771862795107378, 	0.2745387125002,
        0.8997579954114602, 	0.1654953615608,
        0.165278957666387,  	0.327539761183897,
        0.4779249498104445, 	0.29204268367968,
        0.7387738651055051, 	0.2248893420631,
        0.9195339081664588, 	0.1333059908511,
        0.2957581355869394, 	0.28687912477901,
        0.565235326996205,  	0.248048104264,
        0.7844834736631444, 	0.18716988178,
        0.9340014304080591, 	0.109612273267,
        0.1365529328549276, 	0.271405240910696,
        0.3995309409653489, 	0.2512756031992,
        0.6328761530318607, 	0.212508417761,
        0.8192793216440067, 	0.157974705564,
        0.9448992722228822, 	0.091684517413,
        0.24928693010624,   	0.24401579030668,
        0.4829098210913362, 	0.2207677935661,
        0.6861884690817574, 	0.183646865204,
        0.8463475646518723, 	0.13498192669,
        0.9533098466421639, 	0.07780168675,
        0.1163318688837039, 	0.231612794468457,
        0.3427240133427128, 	0.21912625300977,
        0.5506394029286471, 	0.194826149373,
        0.7288685990913261, 	0.160021851763,
        0.8678010538303473, 	0.1165866559,
        0.9599350452672609, 	0.0668372845,
        0.2153539553637942, 	0.21197358592682,
        0.4206380547136725, 	0.1969872359646,
        0.6062532054698457, 	0.172789647254,
        0.7635196899518152, 	0.1405116998,
        0.8850820442229763, 	0.10166007033,
        0.9652459265038386, 	0.05802989303,
        0.1013262735219494, 	0.20195830817823,
        0.2998304689007632, 	0.1936900238252,
        0.4860594218871376, 	0.177491913392,
        0.6523887028824931, 	0.15402698081,
        0.7920082918618151, 	0.12425538213,
        0.8992005330934721, 	0.0893936973,
        0.9695680462702179, 	0.050850361,
        0.1895119735183174, 	0.18721633967762,
        0.372174433565477,  	0.1770042535157,
        0.5413853993301015, 	0.160394661998,
        0.6910289806276847, 	0.1379877462,
        0.8156962512217703, 	0.110592909,
        0.9108799959155736, 	0.0791982705,
        0.9731321766314183, 	0.0449219405,
        0.08974909348465211,    0.1790158634397031,
        0.266362652878281,  	0.17326210948946,
        0.434415036912124,  	0.161939517238,
        0.5885048343186618, 	0.14541196157,
        0.7236793292832427, 	0.1242105331,
        0.8355935352180902, 	0.0990162717,
        0.9206491853475339, 	0.0706371669,
        0.9761055574121985, 	0.0399706288,
        0.1691860234092816, 	0.16755658452714,
        0.3335048478244986, 	0.1602909240441,
        0.4882292856807135, 	0.148413942596,
        0.6289081372652205, 	0.13226728045,
        0.751494202552613,  	0.1123153415,
        0.8524605777966461, 	0.089131757,
        0.9289015281525862, 	0.063381892,
        0.9786117662220801, 	0.035793365,
        0.08054593723882184,    0.1607432863878457,
        0.2395517059229865, 	0.15658010264748,
        0.3923531837139093, 	0.148361554071,
        0.5349928640318863, 	0.13630048236,
        0.6637764022903113, 	0.1207092276,
        0.7753682609520559, 	0.1019914997,
        0.8668779780899501, 	0.080631764,
        0.9359344988126654, 	0.057181802,
        0.9807437048939142, 	0.032237123,
        0.1527855158021855, 	0.15158757511168,
        0.3019898565087649, 	0.146236862448,
        0.4441157832790021, 	0.13745846286,
        0.5758319602618307, 	0.12545812119,
        0.6940510260622232, 	0.1105170832,
        0.7960019260777124, 	0.092985468,
        0.8792947553235905, 	0.073273918,
        0.9419762969597455, 	0.05184317,
        0.982572296604548,  	0.02918484,
        0.07305454001089833,    0.1458490194442418,
        0.217606585159285,  	0.14274049227136,
        0.3575207101389195, 	0.136589688614,
        0.4898148751899023, 	0.12752769665,
        0.611669438284259,  	0.1157476447,
        0.7204872399612022, 	0.101500575,
        0.8139489276119211, 	0.08509006,
        0.8900622901909045, 	0.06686561,
        0.9472042839992287, 	0.04721447,
        0.9841524384576462, 	0.02654575,
        0.1392762040406684, 	0.138369936385807,
        0.2758415489457931, 	0.1343168726386,
        0.4070379379144748, 	0.127649474702,
        0.5303117711368442, 	0.11849751066,
        0.6432636444601362, 	0.1070391017,
        0.7436950411720607, 	0.093497246,
        0.8296510966512859, 	0.07813545,
        0.899458558040345,  	0.06125248,
        0.9517579557107102, 	0.04317587,
        0.9855271558787326, 	0.0242486,
        0.06683799373722858,    0.1334768438669864,
        0.1993212533908327, 	0.1310949418736,
        0.3282476133755109, 	0.126373642028,
        0.4513163732143226, 	0.1193971937,
        0.5663313579792953, 	0.1102900869,
        0.6712401052641287, 	0.099214828,
        0.7641704824204933, 	0.08636903,
        0.843464070154872,  	0.07198186,
        0.9077056751135065, 	0.05630985,
        0.9557482209298864, 	0.0396317,
        0.9867305535051609, 	0.02223685,
        0.127957059483107,  	0.127254977538331,
        0.2538130641688766, 	0.124112038938,
        0.3755014578592272, 	0.118931179407,
        0.4910241148188784, 	0.1117974663,
        0.5984841472799933, 	0.10282803,
        0.6961170488151344, 	0.09217014,
        0.7823196592407168, 	0.07999877,
        0.8556764658353166, 	0.0665137,
        0.9149827707346226, 	0.0519362,
        0.9592641382525345, 	0.0365047,
        0.9877899449314937, 	0.0204652,
        0.06159641178191973,    0.1230369638000829,
        0.1838554952700549, 	0.12117184628844,
        0.3033275128592527, 	0.117469884094,
        0.4182013870662468, 	0.11198719412,
        0.5267357420298785, 	0.1048068862,
        0.6272852994923169, 	0.096037802,
        0.7183258163626651, 	0.08581286,
        0.7984771831074374, 	0.07428705,
        0.8665243239591236, 	0.061635,
        0.9214355468175573, 	0.0480484,
        0.9623778747677173, 	0.0337323,
        0.9887274123114757, 	0.0188969,
        0.118336333898521,  	0.117781436585956,
        0.2350114831029181, 	0.1152955002547,
        0.3483875819890287, 	0.111191065257,
        0.4568730756140824, 	0.1055257478,
        0.5589450609425612, 	0.098379075,
        0.6531706636968095, 	0.08985137,
        0.7382271498464599, 	0.08006232,
        0.8129204868958123, 	0.0691493,
        0.8762020862145225, 	0.0572656,
        0.9271834587251158, 	0.044578,
        0.9651484024508189, 	0.031263,
        0.9895609637285506, 	0.017502,
        0.0571171216935129, 	0.1141099796726278,
        0.1706067553080044, 	0.11262238007724,
        0.2818722666216024, 	0.109666573796,
        0.3894631375763628, 	0.10528109376,
        0.4919767539315794, 	0.0995231104,
        0.5880766898371756, 	0.092467686,
        0.6765101289295733, 	0.0842068,
        0.7561241940055698, 	0.0748481,
        0.8258809700563382, 	0.0645137,
        0.8848710172113028, 	0.053338,
        0.9323251671215585, 	0.041467,
        0.9676242858571313, 	0.029054,
        0.9903054026184541, 	0.016256,
        0.1100590133955921, 	0.10961287784589,
        0.218782058284261,  	0.1076129858336,
        0.324849382841911,  	0.104306816464,
        0.4269734717134944, 	0.0997345016,
        0.5239146743719691, 	0.093951542,
        0.6144962522034329, 	0.08702813,
        0.697618661356368,  	0.0790483,
        0.7722728972064687, 	0.0701089,
        0.8375527362817866, 	0.060319,
        0.8926657199760883, 	0.049796,
        0.9369427185209825, 	0.038668,
        0.9698458072879363, 	0.027071,
        0.9909729882685698, 	0.015138,
        0.05324511048548667,    0.1063895587236679,
        0.1591320426258505, 	0.10518412159645,
        0.2632159437195738, 	0.102786905307,
        0.364317500422449,  	0.099225071,
        0.4612911901682407, 	0.0945389752,
        0.5530382600950529, 	0.088781712,
        0.6385191758075584, 	0.08201851,
        0.7167653986370851, 	0.074326,
        0.7868903572375471, 	0.065791,
        0.8480994871801981, 	0.056511,
        0.8996992181992769, 	0.04659,
        0.9411047809510571, 	0.03614,
        0.9718466031662692, 	0.02528,
        0.9915739428405003, 	0.01413,
        0.1028624487606823, 	0.10249841359547,
        0.2046345292475245, 	0.1008657547987,
        0.3042374312728726, 	0.098163893014,
        0.4006153382805618, 	0.0944214684,
        0.4927466190988324, 	0.089678151,
        0.5796546572080019, 	0.08398422,
        0.6604182026115255, 	0.0774,
        0.7341811363090752, 	0.0699954,
        0.800161543192463,  	0.061849,
        0.8576599952974556, 	0.05305,
        0.9060669514412698, 	0.04368,
        0.9448691702080392, 	0.03385,
        0.9736549358157365, 	0.02367,
        0.9921168443464811, 	0.01322,
        0.04986472504659325,    0.0996467715012768,
        0.1490985968136475, 	0.09865643654076,
        0.2468506588502053, 	0.096685608948,
        0.3421494065388815, 	0.09375387555,
        0.4340477172018469, 	0.089890373,
        0.5216322628815653, 	0.085133498,
        0.6040325871484211, 	0.07953053,
        0.6804297556155508, 	0.0731371,
        0.7500644939366748, 	0.066017,
        0.8122447317774423, 	0.05824,
        0.8663524760126755, 	0.04989,
        0.9118499390637319, 	0.04103,
        0.9482848384172324, 	0.0318,
        0.9752946904827092, 	0.0222,
        0.9926089339727614, 	0.0124,
        0.09654818817610701,    0.096247284972985,
        0.1921949314674772, 	0.0948972243946,
        0.286047201487674,  	0.092661133442,
        0.3772287242533936, 	0.0895598897,
        0.4648881616321068, 	0.085622449,
        0.5482070599191116, 	0.08088557,
        0.6264074912812683, 	0.0753935,
        0.6987593166181626, 	0.069197,
        0.7645870017935286, 	0.062355,
        0.8232759230040675, 	0.05493,
        0.8742781007505622, 	0.04699,
        0.9171173034509412, 	0.0386,
        0.9513934513969957, 	0.0299,
        0.9767861633169063, 	0.0209,
        0.9930563584336583, 	0.0116
    };

    const std::vector<std::array<double, 2>> GaussLegendre(const monOrder k) {
        const int n = (int)ceil((k + 1.) / 2.);
        const size_t startIndex = (size_t)floor((n - 1) * (n - 1) / 4.);
        const size_t readLength = (size_t)floor(n / 2.);

        std::vector<std::array<double, 2>> out;
        double wSum = 0.0;
        for (size_t i{}; i < readLength; ++i) {
            const double xi = _clut[2 * (startIndex + i)], wi = _clut[2 * (startIndex + i) + 1];
            out.push_back({ xi, wi });
            out.push_back({ -xi, wi });
            wSum += wi;
        }

        if (!(n % 2))
            return out;


        out.push_back({ 0, 2. * (1. - wSum) });
        return out;
    }

    const std::vector<std::array<double, 2>> GaussLegendreR(const monOrder k) {
        const int n = (int)ceil((k + 1.) / 2.);
        const size_t startIndex = (size_t)floor((n - 1) * (n - 1) / 4.);
        const size_t readLength = (size_t)floor(n / 2.);

        std::vector<std::array<double, 2>> out;
        double wSum = 0.0;
        for (size_t i{}; i < readLength; ++i) {
            const double xi = 0.5 * _clut[2 * (startIndex + i)] + .5, wi = _clut[2 * (startIndex + i) + 1] * .5;
            out.push_back({ xi, wi });
            out.push_back({ 1. - xi , wi });
            wSum += 2 * wi;
        }

        if (!(n % 2))
            return out;

        out.push_back({ .5, 1. - wSum });
        return out;
    }

    const std::vector<std::array<double, 2>> GaussLobatto(const monOrder k){
        const int n = (int)ceil((k + 3.) / 2.);
        const size_t startIndex = (size_t)floor((n - 3) * (n - 3) / 4.);
        const size_t readLength = (size_t)floor((n - 2) / 2.);
        
        const double endPointWeight = 2./(n*(n-1));
        std::vector<std::array<double, 2>> out;
        out.reserve((size_t)n);
        out.push_back({-1., endPointWeight});
        out.push_back({1., endPointWeight});
        double wSum = endPointWeight;

        if (n == 2)
            return out;

        for (size_t i{}; i < readLength; ++i) {
            const double xi = _lobattoclut[2 * (startIndex + i)], wi = _lobattoclut[2 * (startIndex + i) + 1];
            out.push_back({ xi, wi });
            out.push_back({ -xi, wi });
            wSum += wi;
        }

        if (!(n % 2))
            return out;


        out.push_back({ 0, 2. * (1. - wSum) });
        return out;
    }

    const std::vector<std::array<double, 2>> GaussLobattoR(const monOrder k){
        const int n = (int)ceil((k + 3.) / 2.);
        const size_t startIndex = (size_t)floor((n - 3) * (n - 3) / 4.);
        const size_t readLength = (size_t)floor((n - 2) / 2.);
        
        const double endPointWeight = 1./(n*(n-1));
        std::vector<std::array<double, 2>> out;
        out.reserve((size_t)n);
        out.push_back({0., endPointWeight});
        out.push_back({1., endPointWeight});
        double wSum = 2 * endPointWeight;

        if (n == 2)
            return out;

        for (size_t i{}; i < readLength; ++i) {
            const double xi = .5 * _lobattoclut[2 * (startIndex + i)] + .5, wi = .5 * _lobattoclut[2 * (startIndex + i) + 1];
            out.push_back({ xi, wi });
            out.push_back({ 1. - xi, wi });
            wSum += 2 * wi;
        }

        if (!(n % 2))
            return out;

        out.push_back({ 0.5 , (1. - wSum) });
        return out;
    }
}
#endif